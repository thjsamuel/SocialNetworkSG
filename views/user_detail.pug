extends layout

block titleblock
  //div(style="width: 100%;height: 500px; display:block; background-color: blue")
  a(href='/pages' style="color: black;")
    img(src='/images/SGNLogoAlpha.png' alt='ICON IMG' style="display:inline-block; content-top: 5px; border-bottom: 5px; margin:50px 0px 20px 20px;width: 120px;height: auto;")
    h6(style="display:inline-block; color: black;")= title

block content

  script.
    var socket = io() // declare a socket to use for updating all other users on the board
    let currUser = "#{currUserId}"
    let modID = "#{moderatorId}"
    function renderBoard(sel = null) {
      // gets last path which is id
      var pathname = window.location.pathname.substring(window.location.pathname.lastIndexOf('/') + 1); 
      $.post("../list_posts", {'id': pathname }, function(ret, txtstat, xhr) {
      //$.post("../list_posts", {'id': modID }, function(echoret, txtstat, xhr) {
        function getComments(comment_list) {
          return comment_list.map(function (comment, cid) {
            return `
              <div id="comment_block">
                <h6 id="comment_author">
                  ${comment.owner.username}
                </h6>
                <p id="comment_txt"> ${comment.txt_cont} </p>
                <div id="comment_block2">
                  <p id="comment_datestr"> ${comment.createdStr} </p>
                </div>
              </div>
            `
          }).join('');
        }

        function getModEcho() {
          return echoret.map(function (post, pid) {
            return `
              <div class="mod_story card-header" id="post_no${pid}">
                <dt style="font-size: 21px"> ${post.owner.username} </dt>
                <p id="date_str" style="font-size: 14px"> <em>${post.createdStr}</em> </p> <br/>
                <span class="badge badge-pill badge-danger">Morals</span>
                <br/><br/><br/>
                <div class="card-body text-center " role="group" style="cursor:default;  /*max-width: 18rem;*/" id="category_pill", type='submit', name='soft', value="withdraw_conn">STORY
                <br/><br/>
                <dd class="posttitle card-title" style="text-transform: capitalize"> ${post.title} </dd>
                <div id="img_loader${pid}"></div>
                <dd id="postbody${pid}" class="card-text blurpost postbody" data-toggle="button" style="white-space: pre-line; cursor:pointer;"> ${post.txt_cont} </dd>
                </div>
                <br/>
                <br/>
              </div>
            `
          }).join('');
        }

        let selectedCommentId = sel
        let relation = "#{relation}"
        let public = "#{access.PUBLIC}"
        let del_action = "#{requrl}".split('?')
        del_action = del_action[0] + "?hard=del_one_post"

        let content = `
        <div id="postsDiv">
          <!--${currUser != modID ? 'getModEcho()' : ''}-->
          <dl id="all_postList">
          ${ret.map(function(post, pid) {
            return `
            <div class="post_card" data-postid="${post._id}" data-index="${pid}">
              ${relation == public ? '' : `
              <div id="delete_post">
                <form class="deletepostform" method="POST" action="${del_action}">
                  <input id="del_one_post_button${pid}" type="image" src="/images/32pxGrey.png" name="hard" value="del_one_post"/>
                  <input type="hidden" name="marked_post" value="${post._id}"/>
                  <input type="hidden" name="hard" value="del_one_post"/>
                </form>
              </div>
              `}
              <dt> ${post.owner.username} </dt>
              <p id="date_str"> ${post.createdStr} </p>
              <div id="err_msg${pid}"></div>
              <div id="img_loader${pid}"></div>
              <dd id="posttitle"> ${post.title} </dd>
              <dd id="postbody"> ${post.txt_cont} </dd>
              <br/>
              <br/>
              ${selectedCommentId == post._id ? `
              <form id="reply_post${pid}" action="" method="POST"> 
                <textarea id="comment_field" type="text" name="commentTxt" style="display: block; width: 100%"></textarea>
                <button class="reply_button" id="reply_butt${pid}" type="submit" name='soft' value="reply_post" data-formref="reply_post${pid} "data-postid="reply_hPostId${pid}" data-buttref="reply_butt${pid}"> Reply </button>
                <input id="reply_in" type="hidden" name="soft" value="reply_post" />
                <input id="reply_hPostId${pid}" type="hidden" name="postid" value="${post._id}"/>
              </form>
              ` : ''}

              <form id="reply_get${pid}" method="POST" action="">
                <input id="reply_in${pid}" type="hidden" name="soft" value="reply_display"/>
                <input id="reply_hid${pid}" type="hidden" name="postid" value="${post._id}"/>
              </form>
              ${relation == public ? '' : `
                <div class="card_actions">
                  <span class="post_reply active" data-color="#7ed6df" data-pic="url(re_icon48.png)" data-text="Reply" data-formref="reply_get${pid}" data-hidden="reply_hid${pid}">
                    <img src="/images/re_icon48.png" alt="REPLY ICO"/>
                  </span>
                  <span class="post_like" data-color="#ff7979" data-pic="url(like_icon32.png)" data-text="Like">
                    <img src="/images/like_icon32.png" alt="LIKE ICO"/>
                  </span>
                  <span class="post_options" data-color="#badc58" data-pic="url(SGNLogoAlpha.png)" data-text="Option" data-id="${pid}">
                    <img src='/images/SGNLogoAlpha.png' alt='ADD IMG' style="display:inline-block"/>
                  </span>
                  <div id="hiddenupload" style="width: 0px; height: 0px; overflow: hidden;">
                    <input class="upload" id="imgupload${pid}" type="file" name="pic" accept="image/*" data-postid="${post._id}" data-index="${pid}">
                  </div>
                  <span class="post_edit" data-color="#f9ca24" data-pic="url(1.png)" data-text="Edit"></span>
                </div>
              `}
              ${getComments(post.comment_list)}
            </div>
            `
            }).join('')
          }
          ${ret.length == 0 ? `<p>There are no posts in this board</p>` : ''}
          </dl>
        </div>
        `
        $('#post_load').html(content)

        $(document).ready(function() {
          
          $('#reply_post').submit(function() { // # does nothing since reply_post is not an id
            $('#reply_button').prop("disabled", true).css('opacity',0.5);
          });

          $(".post_reply").click(function() {
            let formstr = "#" + $(this).attr("data-formref")
            let formstr2 = "#" + $(this).attr("data-hidden")
            $(formstr).submit(function(e) {
              e.preventDefault();

              let formData = {
                soft: "reply_display",
                postid: $(formstr2).val(),
                sockid: socket.id
              }
              $.get('', formData, function(resp) {
              });
            });
            $(formstr).submit()
          });

          $(".reply_button").click(function() {
            let formstr = "#" + $(this).attr("data-formref")
            let hPost_id = "#" + $(this).attr("data-postid")
            let ref = "#" + $(this).attr("data-buttref")
            $(formstr).submit(function(e) {
              e.preventDefault(); // prevents page reloading

              let formData = {
                commentTxt: $("#comment_field").val(), 
                soft: "reply_post",
                postid: $(hPost_id).val()
              }
              
              $.post('', formData, function(resp) {
              });

              $("#comment_field").val("")
              $(ref).prop("disabled", true).css('opacity',0.5);

              let obj = { userid: "#{currUserId}", sockid: socket.id };
              socket.emit('chat update', obj)
            });
          });

          //$('.imgupload').prop("disabled", true).css('opacity',0);
          $(".post_options").click(function(e) {
            let indexstr = "#imgupload" + $(this).attr("data-id")
            $(indexstr).trigger('click')
          });

          $(".upload").change(function(e) {
            if ($(this).val()) {
              if ($(this)[0].files[0].size)
              {
                let formData = new FormData();
                formData.append('uploads', $(this)[0].files[0], $(this)[0].files[0].name);
                formData.append('data', $(this).attr("data-postid"))
                formData.append('ind', $(this).attr("data-index"))
              
                $.ajax({
                  url: "../install_img",
                  data: formData,
                  processData: false,
                  contentType: false,
                  //contentType: "application/json; charset=utf-8",
                  dataType: "json",
                  type: 'POST',
                  success: function(data){
                  }
                });
              }
            }
          });

          $(".post_card").map(function () {
            let formData = new FormData();
            formData.append('data', $(this).attr("data-postid"))
            formData.append('ind', $(this).attr("data-index"))
            formData.append('sockid', socket.id)
            $.ajax({
              url: "../request_img",
              data: formData,
              processData: false,
              contentType: false,
              //contentType: "application/json; charset=utf-8",
              dataType: "json",
              type: 'POST',
              success: function(data){
              }
            });
          });

          $(".card_actions span").hover(function() {
            $(".card_actions span").removeClass("active");
            $(this).addClass("active");
          });

          $(".card_actions span").click(function() {
            $(".card_actions span").removeClass("clicked");
            $(this).addClass("clicked");
            //$("#action_button").css("background", $(this).attr("data-color"));
            //$("#action_button").html($(this).attr("data-text"));
            //$("#post_card").css("color", $(this).attr("data-color"));
          });

          $(".deletepostform").submit(function(eventHandler) {
            if (currUser != null)
            {
              //$('#del_one_post_button').prop("disabled", true).css('opacity',0.5);
              let obj = { userid: currUser, sockid: socket.id };
              socket.emit('chat update', obj)
            }
          });

          if (sel != null)
          {
            let content = ""
            sel.msg != '' ? content = `
            <div class="alert alert-warning alert-dismissable fade show" role="alert">
              <span>${sel.msg}</span>
              <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                <span aria-hidden="true">&times</span>
              </button>
            </div>`: ""
            $(`#err_msg${sel.id}`).html(content)
          }

          $(".postbody").hover(
            function() { 
              if ($(this).hasClass( "stope" ) == false)
              {
                $(this).removeClass('blurpost')
                return false 
              }
            },
            function() {
              if ($(this).hasClass( "stope" ) == false)
              {
                $(this).addClass('blurpost') 
                return false
              }
            }
          );

          $(".postbody").on("click", function(e) {
            if (!$(this).data('clicked'))
            {
              $(this).data('clicked', true);
              $(this).addClass("stope") 
              return false;
            }
            else ($(this).data('clicked'))
            {
              $(this).data('clicked', false);
              $(this).removeClass("stope") 
               return false;
            }
          });

          // "../pee" , by default, __dirname points to routes folder
          //$("#post_load").load("../list_posts", {'id': pathname}, function(resTxt, txtstat, xhr) {
            //alert(txtstat);
          //});
        });
      //}); // for moderator posts
      });
    }

    function renderPostForm() {
      let content = `
        <div class="card" style="width: 50%; height: 500px;" name="dummyframe" id="dummyframe" border="2px">
          <form method="POST" action="" id="postform">
            <div id="postingErr"></div>
            <label for="Title" style=" position: absolute; left:8%; top:1%;">Your title here</label>
            <textarea id="postTitleArea" type="text" name="postTitle" maxlength="70" rows="2" cols="40" placeholder="Title" style="resize: none; position: absolute; left:8%; top:5%; "></textarea>
            <label for="Content"style="position: absolute; left:8%; top:15%">Your content here</label>
            <textarea id="posttxtArea" type="text" name="posttxt" rows="20" cols="70" placeholder="Content" style="resize: none; position: absolute; left:8%; top:20%"></textarea>
            <input type="hidden" name='soft' value="compose_new" />
          </form>
          <form method="GET" id="closepostform"><input id="close_comp" type="image" form="closepostform" src="/images/32pxGrey.png" /></form>
        </div>
        <button id="post_button" form="postform" type='submit' name='soft' value="post_new" style="display:block; margin:20px">POST</button>
      `

      $('#postform_load').html(content)
    }

    function loadPostImages(obj) {
      let obj_path = "/" + obj.path
      let imgtag = `<img id="img_post" src="${obj_path}" alt="ADD IMG"/>`
      $(`#img_loader${obj.ind}`).html(imgtag)
    }

  script(src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js")

  //- var shit = include ./errormsg.pug

  script.
    renderBoard();

    socket.on('chat update', function(msg) {
      renderBoard(msg);
      $('#post_button').prop("disabled", false).css('opacity',1);
    });

    socket.on('img upload', function(msg) {
      loadPostImages(msg)
    });

    socket.on('img fill', function(msg) {
      loadPostImages(msg)
    });

    socket.on('page refresh', function(msg) {
      renderBoard(msg);
    });

  h1 #{userName}
  p #{user.lifespan}

  div(style='margin-left:20px;margin-top:10px;position: relative;')
    
    h4 Recent Posts From This Month
    
    div#post_load
      
    if (currUser && currUser.url != user.url && (relation == access.PUBLIC))
      form(method='GET' action='')
        div.form-group
          <button class="btn btn-blue btn-lg btn-outline-info" id="know_button", type='submit', name='soft', value="know_new">KNOW!</button>

    // If signed in user eqls the user page's user
    if (currUser && currUser.url == user.url) || (currUser && currUser.url != user.url && relation == access.PRIVATE )

      // # in action no longer required in HTML5
      form(id="get_compose" method='GET' action='')
        div.form-group
          <button id="compose_button", type='submit', name='soft', value="compose_new">Create Post</button>

      script.
        $('#get_compose').submit(function(e) {
          e.preventDefault();
          let formData = {
            soft: "compose_new"
          }

          $.get('', formData, function(resp) {
            renderPostForm();
            $(document).ready(function() {
              //$('#compose_button').prop("disabled", true).css('opacity',0.5);
              //document.getElementById("post_button").scrollIntoView()
              $('#postform').submit(function(eventHand) {
                eventHand.preventDefault(); // prevents page reloading
                if ($('#postTitleArea').val() == '') {
                  let content = `
                  <div class="alert alert-warning alert-dismissable fade show" role="alert">
                    <span>Please specify the title for your post</span>
                    <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                      <span aria-hidden="true">&times</span>
                    </button>
                  </div>`
                  $(`#postingErr`).html(content)
                }
                else if ($('#posttxtArea').val() == '')
                {
                  let content = `
                  <div class="alert alert-warning alert-dismissable fade show" role="alert">
                    <span>Type into the text box to get start posting!</span>
                    <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                      <span aria-hidden="true">&times</span>
                    </button>
                  </div>`
                  $(`#postingErr`).html(content)
                }
                else
                {
                  $('#post_button').prop("disabled", true).css('opacity',0.5);
                  //let formData = new FormData(document.getElementById("postform"));
                  let formData = {
                    posttxt: $("#posttxtArea").val(),
                    posttitle: $("#postTitleArea").val(),
                    soft: "compose_new"
                  }
                
                  $.post('', formData, function(resp) {
                  });

                  $("#posttxtArea").val("")
                  $("#postTitleArea").val("")

                  let obj = { userid: "#{currUserId}", sockid: socket.id };
                  socket.emit('chat update', obj)
                }
              });
            });
          });
        });

      div#postform_load

      a(href='/pages/log-out') LOG OUT
  
  hr
  p
    a(href=user.url+'/delete') Delete author
  p
    a(href=user.url+'/update') Update author

  form(method='GET' action='' id="refresh")
